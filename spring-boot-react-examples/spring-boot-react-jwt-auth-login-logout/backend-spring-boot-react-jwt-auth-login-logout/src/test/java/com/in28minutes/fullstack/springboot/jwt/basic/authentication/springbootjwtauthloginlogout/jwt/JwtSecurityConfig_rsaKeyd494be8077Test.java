// Test generated by RoostGPT for test dm-example-3 using AI Model gpt

package com.in28minutes.fullstack.springboot.jwt.basic.authentication.springbootjwtauthloginlogout.jwt;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;

import com.nimbusds.jose.jwk.RSAKey;

@ExtendWith(MockitoExtension.class)
public class JwtSecurityConfig_rsaKeyd494be8077Test {

    @Mock
    KeyPair keyPair;

    @Mock
    RSAPublicKey publicKey;

    @Mock
    RSAPrivateKey privateKey;

    @InjectMocks
    JwtSecurityConfig jwtSecurityConfig;

    @BeforeEach
    public void setup() throws NoSuchAlgorithmException {
        when(keyPair.getPublic()).thenReturn(publicKey);
        when(keyPair.getPrivate()).thenReturn(privateKey);
    }

    @Test
    public void testRsaKeySuccess() {
        RSAKey rsaKey = jwtSecurityConfig.rsaKey();
        assertNotNull(rsaKey);
        assertEquals(publicKey, rsaKey.getPublicKey());
        assertEquals(privateKey, rsaKey.getPrivateKey());
    }

    @Test
    public void testRsaKeyFailure() {
        when(keyPair.getPublic()).thenReturn(null);
        when(keyPair.getPrivate()).thenReturn(null);
        RSAKey rsaKey = jwtSecurityConfig.rsaKey();
        assertNull(rsaKey.getPublicKey());
        assertNull(rsaKey.getPrivateKey());
    }
}