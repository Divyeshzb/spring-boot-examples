// Test generated by RoostGPT for test dm-example-3 using AI Model gpt

package com.in28minutes.fullstack.springboot.jwt.basic.authentication.springbootjwtauthloginlogout.jwt;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.ProviderManager;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.core.userdetails.UserDetailsService;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class JwtSecurityConfig_authenticationManager13a997ad84Test {

    @InjectMocks
    private JwtSecurityConfig jwtSecurityConfig;

    @Mock
    private UserDetailsService userDetailsService;

    @BeforeEach
    void setUp() {
        jwtSecurityConfig = new JwtSecurityConfig();
    }

    @Test
    void testAuthenticationManager_validUserDetailsService() {
        DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();
        authenticationProvider.setUserDetailsService(userDetailsService);

        when(jwtSecurityConfig.authenticationManager(userDetailsService)).thenReturn(new ProviderManager(authenticationProvider));

        AuthenticationManager authenticationManager = jwtSecurityConfig.authenticationManager(userDetailsService);
        assertNotNull(authenticationManager);
        assertTrue(authenticationManager instanceof ProviderManager);
    }

    @Test
    void testAuthenticationManager_NullUserDetailsService() {
        DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();
        authenticationProvider.setUserDetailsService(null);

        when(jwtSecurityConfig.authenticationManager(null)).thenReturn(new ProviderManager(authenticationProvider));

        AuthenticationManager authenticationManager = jwtSecurityConfig.authenticationManager(null);
        assertNotNull(authenticationManager);
        assertTrue(authenticationManager instanceof ProviderManager);
    }
}