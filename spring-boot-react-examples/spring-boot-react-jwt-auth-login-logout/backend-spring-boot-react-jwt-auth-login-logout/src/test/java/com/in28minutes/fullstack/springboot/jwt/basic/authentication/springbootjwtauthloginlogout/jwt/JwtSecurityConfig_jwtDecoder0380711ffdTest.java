// Test generated by RoostGPT for test dm-example-3 using AI Model gpt

package com.in28minutes.fullstack.springboot.jwt.basic.authentication.springbootjwtauthloginlogout.jwt;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.security.oauth2.jwt.JwtDecoder;
import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

public class JwtSecurityConfig_jwtDecoder0380711ffdTest {

    @InjectMocks
    JwtSecurityConfig jwtSecurityConfig;

    @Mock
    RSAKey rsaKey;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testJwtDecoder_success() throws JOSEException {
        when(rsaKey.toRSAPublicKey()).thenReturn(new RSAPublicKey() {
            // TODO: Fill in the required methods for RSAPublicKey
        });
        JwtDecoder jwtDecoder = jwtSecurityConfig.jwtDecoder();
        assertNotNull(jwtDecoder);
    }

    @Test
    public void testJwtDecoder_throwsJOSEException() throws JOSEException {
        when(rsaKey.toRSAPublicKey()).thenThrow(JOSEException.class);
        assertThrows(JOSEException.class, () -> jwtSecurityConfig.jwtDecoder());
    }
}