// Test generated by RoostGPT for test dm-example-3 using AI Model gpt

package com.in28minutes.fullstack.springboot.jwt.basic.authentication.springbootjwtauthloginlogout.jwt;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.oauth2.jwt.JwtEncoder;
import org.springframework.security.oauth2.jwt.JwtEncoderParameters;

import java.time.Instant;
import java.time.temporal.ChronoUnit;
import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

public class JwtTokenService_generateToken15775085d0Test {

    @Mock
    private JwtEncoder jwtEncoder;

    @InjectMocks
    private JwtTokenService jwtTokenService;

    @Test
    public void testGenerateToken_Success() {
        Authentication auth = Mockito.mock(Authentication.class);
        when(auth.getAuthorities()).thenReturn(
                Arrays.asList(new SimpleGrantedAuthority("ROLE_USER")));
        when(auth.getName()).thenReturn("user");
        when(jwtEncoder.encode(any(JwtEncoderParameters.class))).thenReturn("dummyToken");

        String token = jwtTokenService.generateToken(auth);
        assertEquals("dummyToken", token);
    }

    @Test
    public void testGenerateToken_Failure() {
        Authentication auth = Mockito.mock(Authentication.class);
        when(auth.getAuthorities()).thenReturn(null);
        when(auth.getName()).thenReturn(null);

        String token = jwtTokenService.generateToken(auth);
        assertEquals(null, token);
    }
}