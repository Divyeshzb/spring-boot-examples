// Test generated by RoostGPT for test dm-example-3 using AI Model gpt

package com.in28minutes.fullstack.springboot.jwt.basic.authentication.springbootjwtauthloginlogout.jwt;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertThrows;

import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class JwtSecurityConfig_keyPair934c3a4759Test {

    private KeyPairGenerator keyPairGenerator;

    @BeforeEach
    public void setup() {
        keyPairGenerator = Mockito.mock(KeyPairGenerator.class);
    }

    @Test
    public void testKeyPairSuccess() throws NoSuchAlgorithmException {
        Mockito.when(keyPairGenerator.getInstance("RSA")).thenReturn(keyPairGenerator);
        Mockito.when(keyPairGenerator.generateKeyPair()).thenReturn(new KeyPair(null, null));

        JwtSecurityConfig_keyPair934c3a4759 jwtSecurityConfig = new JwtSecurityConfig_keyPair934c3a4759();
        KeyPair keyPair = jwtSecurityConfig.keyPair();

        assertNotNull(keyPair);
    }

    @Test
    public void testKeyPairFailure() throws NoSuchAlgorithmException {
        Mockito.when(keyPairGenerator.getInstance("RSA")).thenReturn(keyPairGenerator);
        Mockito.when(keyPairGenerator.generateKeyPair()).thenThrow(new NoSuchAlgorithmException());

        JwtSecurityConfig_keyPair934c3a4759 jwtSecurityConfig = new JwtSecurityConfig_keyPair934c3a4759();

        assertThrows(IllegalStateException.class, () -> {
            jwtSecurityConfig.keyPair();
        });
    }
}