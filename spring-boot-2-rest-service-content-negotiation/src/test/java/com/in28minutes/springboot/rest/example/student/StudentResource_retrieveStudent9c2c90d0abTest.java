// Test generated by RoostGPT for test dm-java-example1 using AI Model gpt

package com.in28minutes.springboot.rest.example.student;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.in28minutes.springboot.rest.example.student.Student;
import com.in28minutes.springboot.rest.example.student.StudentNotFoundException;
import com.in28minutes.springboot.rest.example.student.StudentRepository;
import com.in28minutes.springboot.rest.example.student.StudentResource;

public class StudentResource_retrieveStudent9c2c90d0abTest {

    @InjectMocks
    StudentResource studentResource;

    @Mock
    StudentRepository studentRepository;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testRetrieveStudent_Success() {
        Student student = new Student("John", "A");
        when(studentRepository.findById(1L)).thenReturn(Optional.of(student));

        Student foundStudent = studentResource.retrieveStudent(1);

        assertEquals("John", foundStudent.getName());
        assertEquals("A", foundStudent.getGrade());
    }

    @Test
    public void testRetrieveStudent_NotFound() {
        when(studentRepository.findById(1L)).thenReturn(Optional.empty());

        assertThrows(StudentNotFoundException.class, () -> {
            studentResource.retrieveStudent(1);
        });
    }
}